@model Udemy_Project.Models.User



<h2>Register Admin</h2>

@using (Html.BeginForm())
{
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FistName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FistName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FistName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" , @onblur = "validateUserName()" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sign Up" class="btn btn-default" id="signUp" />
            </div>
        </div>
    </div>
}

<dialog id="dialog" style="position:absolute;top:50px;right:20px; padding:8px;color:red"></dialog>

<script type="text/javascript">
            const setDialog = (msg) => {
                const dialog = document.getElementById("dialog");
                dialog.innerHTML = msg;
                dialog.open=true
                setTimeout(() => { dialog.open=false; }, 6000)
            }
             
            let signUpButton = document.getElementById("signUp");
            function validateUserName() {
                var userName = document.getElementById("UserName");

                var a = @Html.Raw(Json.Encode(TempData["UsernameList"]));


                    if (a.includes(userName.value)) {
                        setDialog("Username Already Exists");
                        signUpButton.disabled = true;
                    } else {
                        signUpButton.disabled = false;
                    }
            }


</script>
    
<div style="font-size:large; padding:10px; border:1px solid black ;display:inline-block">
    <i class="fa fa-arrow-left" aria-hidden="true"></i>
    @Html.ActionLink("Back to Course List", "sp_getCourse")
</div>

